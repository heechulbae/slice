package org.etri.slice.tools.adl.generator.compiler;

import com.google.inject.Inject;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.EcoreUtil2;
import org.eclipse.xtext.naming.IQualifiedNameProvider;
import org.eclipse.xtext.naming.QualifiedName;
import org.eclipse.xtext.xbase.lib.Extension;
import org.etri.slice.tools.adl.domainmodel.AgentDeclaration;
import org.etri.slice.tools.adl.domainmodel.DomainDeclaration;
import org.etri.slice.tools.adl.validation.domain_dependency.Domain;
import org.etri.slice.tools.adl.validation.domain_dependency.DomainManager;

@SuppressWarnings("all")
public class POMCompiler {
  @Inject
  @Extension
  private IQualifiedNameProvider _iQualifiedNameProvider;
  
  @Inject
  private DomainManager domainManager;
  
  public CharSequence compileDomainPOM(final DomainDeclaration it) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<modelVersion>4.0.0</modelVersion>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<parent>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<groupId>org.etri.slice</groupId>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<artifactId>org.etri.slice.models</artifactId>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<version>0.9.1</version>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<relativePath>../pom.xml</relativePath>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</parent>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<groupId>org.etri.slice.commons</groupId>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<artifactId>org.etri.slice.commons.");
    QualifiedName _fullyQualifiedName = this._iQualifiedNameProvider.getFullyQualifiedName(it);
    _builder.append(_fullyQualifiedName, "\t");
    _builder.append("</artifactId>");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("<name>The SLICE common data models for ");
    QualifiedName _fullyQualifiedName_1 = this._iQualifiedNameProvider.getFullyQualifiedName(it);
    _builder.append(_fullyQualifiedName_1, "\t");
    _builder.append(" domain</name>");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<packaging>bundle</packaging>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<dependencies>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<dependency>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<groupId>org.etri.slice</groupId>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<artifactId>org.etri.slice.commons</artifactId>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<version>0.9.1</version>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</dependency>\t\t\t\t");
    _builder.newLine();
    {
      for(final Domain d : this.domainManager.getDomain(this._iQualifiedNameProvider.getFullyQualifiedName(it).toString()).dependencies) {
        _builder.append("\t\t");
        _builder.append("<dependency>");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("<groupId>org.etri.slice.commons</groupId>");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("<artifactId>org.etri.slice.commons.");
        _builder.append(d.domain, "\t\t\t");
        _builder.append("</artifactId>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("<version>0.9.1</version>");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("</dependency>");
        _builder.newLine();
      }
    }
    _builder.append("\t");
    _builder.append("</dependencies>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<build>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<plugins>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<plugin>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<groupId>org.apache.felix</groupId>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<artifactId>maven-bundle-plugin</artifactId>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<extensions>true</extensions>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<configuration>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<instructions>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("<Bundle-ClassPath>${bundle.classpath}</Bundle-ClassPath>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("<Embed-Transitive>true</Embed-Transitive>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("<Embed-Dependency>${embed.dependency}</Embed-Dependency>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("<Embed-Directory>${embed.directory}</Embed-Directory>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("<_exportcontents>${export.packages}</_exportcontents>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("<Import-Package>${import.packages}</Import-Package>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("</instructions>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</configuration>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</plugin>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<plugin>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<groupId>org.apache.maven.plugins</groupId>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<artifactId>maven-eclipse-plugin</artifactId>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<configuration>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<downloadSources>false</downloadSources>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</configuration>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</plugin>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<plugin>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<groupId>org.apache.maven.plugins</groupId>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<artifactId>maven-compiler-plugin</artifactId>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<configuration>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<source>1.8</source>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<target>1.8</target>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<encoding>UTF-8</encoding>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</configuration>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</plugin>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<plugin>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<groupId>org.codehaus.mojo</groupId>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<artifactId>properties-maven-plugin</artifactId>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<executions>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<execution>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("<phase>initialize</phase>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("<goals>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t\t");
    _builder.append("<goal>read-project-properties</goal>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("</goals>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("<configuration>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t\t");
    _builder.append("<files>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t\t\t");
    _builder.append("<file>bundle.properties</file>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t\t");
    _builder.append("</files>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("</configuration>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("</execution>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</executions>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</plugin>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</plugins>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</build>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("</project>\t\t");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence compileAgentPOM(final AgentDeclaration it) {
    CharSequence _xblockexpression = null;
    {
      final DomainDeclaration domain = EcoreUtil2.<DomainDeclaration>getContainerOfType(it, DomainDeclaration.class);
      String domainFQN = "";
      if ((null != domain)) {
        domainFQN = this._iQualifiedNameProvider.getFullyQualifiedName(domain).toString();
      }
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("<modelVersion>4.0.0</modelVersion>");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("<parent>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("<groupId>org.etri.slice</groupId>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("<artifactId>org.etri.slice.agents</artifactId>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("<version>0.9.1</version>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("<relativePath>../pom.xml</relativePath>");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("</parent>");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("<packaging>bundle</packaging>\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("<artifactId>org.etri.slice.agents.");
      QualifiedName _fullyQualifiedName = this._iQualifiedNameProvider.getFullyQualifiedName(it.eContainer());
      _builder.append(_fullyQualifiedName, "\t");
      _builder.append(".");
      String _lowerCase = it.getName().toLowerCase();
      _builder.append(_lowerCase, "\t");
      _builder.append("</artifactId>");
      _builder.newLineIfNotEmpty();
      _builder.append("\t");
      _builder.append("<name>... org.etri.slice.agents.");
      QualifiedName _fullyQualifiedName_1 = this._iQualifiedNameProvider.getFullyQualifiedName(it.eContainer());
      _builder.append(_fullyQualifiedName_1, "\t");
      _builder.append(".");
      String _lowerCase_1 = it.getName().toLowerCase();
      _builder.append(_lowerCase_1, "\t");
      _builder.append("</name>");
      _builder.newLineIfNotEmpty();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("<dependencies>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("<dependency>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<groupId>org.etri.slice</groupId>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<artifactId>org.etri.slice.core</artifactId>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<version>0.9.1</version>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("</dependency>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("<dependency>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<groupId>org.etri.slice.commons</groupId>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<artifactId>org.etri.slice.commons.");
      QualifiedName _fullyQualifiedName_2 = this._iQualifiedNameProvider.getFullyQualifiedName(it.eContainer());
      _builder.append(_fullyQualifiedName_2, "\t\t\t");
      _builder.append("</artifactId>");
      _builder.newLineIfNotEmpty();
      _builder.append("\t\t\t");
      _builder.append("<version>0.9.1</version>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("</dependency>");
      _builder.newLine();
      {
        for(final Domain d : this.domainManager.getDomain(domainFQN).dependencies) {
          _builder.append("\t\t");
          _builder.append("<dependency>");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("\t");
          _builder.append("<groupId>org.etri.slice.commons</groupId>");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("\t");
          _builder.append("<artifactId>org.etri.slice.commons.");
          _builder.append(d.domain, "\t\t\t");
          _builder.append("</artifactId>");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          _builder.append("\t");
          _builder.append("<version>0.9.1</version>");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("</dependency>");
          _builder.newLine();
        }
      }
      _builder.append("\t");
      _builder.append("</dependencies>");
      _builder.newLine();
      _builder.newLine();
      _builder.append("\t");
      _builder.append("<build>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("<plugins>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<plugin>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<groupId>org.apache.felix</groupId>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<artifactId>maven-bundle-plugin</artifactId>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<configuration>");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("<instructions>");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("<Private-Package>${private.packages}</Private-Package>");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("</instructions>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("</configuration>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("</plugin>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<plugin>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<groupId>org.apache.felix</groupId>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<artifactId>maven-ipojo-plugin</artifactId>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("</plugin>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<plugin>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<groupId>org.apache.maven.plugins</groupId>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<artifactId>maven-eclipse-plugin</artifactId>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("</plugin>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<plugin>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<groupId>org.apache.maven.plugins</groupId>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<artifactId>maven-compiler-plugin</artifactId>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("</plugin>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<plugin>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<groupId>org.codehaus.mojo</groupId>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<artifactId>properties-maven-plugin</artifactId>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("</plugin>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("</plugins>");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("</build>\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("</project>");
      _builder.newLine();
      _xblockexpression = _builder;
    }
    return _xblockexpression;
  }
  
  public CharSequence compileDevicePOM(final AgentDeclaration it) {
    CharSequence _xblockexpression = null;
    {
      final DomainDeclaration domain = EcoreUtil2.<DomainDeclaration>getContainerOfType(it, DomainDeclaration.class);
      String domainFQN = "";
      if ((null != domain)) {
        domainFQN = this._iQualifiedNameProvider.getFullyQualifiedName(domain).toString();
      }
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("<modelVersion>4.0.0</modelVersion>");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("<parent>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("<groupId>org.etri.slice.devices</groupId>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("<artifactId>org.etri.slice.devices</artifactId>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("<version>0.9.1</version>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("<relativePath>../pom.xml</relativePath>");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("</parent>");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("<packaging>bundle</packaging>\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("<artifactId>org.etri.slice.devices.");
      QualifiedName _fullyQualifiedName = this._iQualifiedNameProvider.getFullyQualifiedName(it.eContainer());
      _builder.append(_fullyQualifiedName, "\t");
      _builder.append(".");
      String _lowerCase = it.getName().toLowerCase();
      _builder.append(_lowerCase, "\t");
      _builder.append("</artifactId>");
      _builder.newLineIfNotEmpty();
      _builder.append("\t");
      _builder.append("<name>... org.etri.slice.devices.");
      QualifiedName _fullyQualifiedName_1 = this._iQualifiedNameProvider.getFullyQualifiedName(it.eContainer());
      _builder.append(_fullyQualifiedName_1, "\t");
      _builder.append(".");
      String _lowerCase_1 = it.getName().toLowerCase();
      _builder.append(_lowerCase_1, "\t");
      _builder.append("</name>");
      _builder.newLineIfNotEmpty();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("<dependencies>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("<dependency>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<groupId>org.etri.slice.commons</groupId>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<artifactId>org.etri.slice.commons.");
      QualifiedName _fullyQualifiedName_2 = this._iQualifiedNameProvider.getFullyQualifiedName(it.eContainer());
      _builder.append(_fullyQualifiedName_2, "\t\t\t");
      _builder.append("</artifactId>");
      _builder.newLineIfNotEmpty();
      _builder.append("\t\t\t");
      _builder.append("<version>0.9.1</version>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("</dependency>");
      _builder.newLine();
      {
        for(final Domain d : this.domainManager.getDomain(domainFQN).dependencies) {
          _builder.append("\t\t");
          _builder.append("<dependency>");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("\t");
          _builder.append("<groupId>org.etri.slice.commons</groupId>");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("\t");
          _builder.append("<artifactId>org.etri.slice.commons.");
          _builder.append(d.domain, "\t\t\t");
          _builder.append("</artifactId>");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          _builder.append("\t");
          _builder.append("<version>0.9.1</version>");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("</dependency>");
          _builder.newLine();
        }
      }
      _builder.append("\t");
      _builder.append("</dependencies>");
      _builder.newLine();
      _builder.newLine();
      _builder.append("\t");
      _builder.append("<build>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("<resources>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<resource>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<directory>src/main/resources</directory>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("</resource>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("</resources>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("<plugins>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<plugin>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<groupId>org.apache.felix</groupId>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<artifactId>maven-bundle-plugin</artifactId>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<configuration>");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("<instructions>");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("<Bundle-ClassPath>${bundle.classpath}</Bundle-ClassPath>");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("<Embed-Dependency>${embed.dependency}</Embed-Dependency>");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("<Embed-Directory>${embed.directory}</Embed-Directory>\t");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append("<Private-Package>${private.packages}</Private-Package>");
      _builder.newLine();
      _builder.append("\t\t\t\t\t");
      _builder.append("</instructions>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("</configuration>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("</plugin>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<plugin>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<groupId>org.apache.felix</groupId>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<artifactId>maven-ipojo-plugin</artifactId>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("</plugin>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<plugin>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<groupId>org.apache.maven.plugins</groupId>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<artifactId>maven-eclipse-plugin</artifactId>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("</plugin>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<plugin>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<groupId>org.apache.maven.plugins</groupId>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<artifactId>maven-compiler-plugin</artifactId>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("</plugin>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("<plugin>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<groupId>org.codehaus.mojo</groupId>");
      _builder.newLine();
      _builder.append("\t\t\t\t");
      _builder.append("<artifactId>properties-maven-plugin</artifactId>");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("</plugin>");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("</plugins>");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("</build>");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("</project>");
      _builder.newLine();
      _xblockexpression = _builder;
    }
    return _xblockexpression;
  }
  
  public CharSequence compileRulePOM(final AgentDeclaration it) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<modelVersion>4.0.0</modelVersion>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<parent>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<groupId>org.etri.slice</groupId>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<artifactId>org.etri.slice.rules</artifactId>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<version>0.9.1</version>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</parent>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<artifactId>org.etri.slice.rules.");
    QualifiedName _fullyQualifiedName = this._iQualifiedNameProvider.getFullyQualifiedName(it.eContainer());
    _builder.append(_fullyQualifiedName, "\t");
    _builder.append(".");
    String _lowerCase = it.getName().toLowerCase();
    _builder.append(_lowerCase, "\t");
    _builder.append("</artifactId>");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("<version>0.9.1</version>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<name>... rules for a ");
    QualifiedName _fullyQualifiedName_1 = this._iQualifiedNameProvider.getFullyQualifiedName(it.eContainer());
    _builder.append(_fullyQualifiedName_1, "\t");
    _builder.append(".");
    String _lowerCase_1 = it.getName().toLowerCase();
    _builder.append(_lowerCase_1, "\t");
    _builder.append(" agent </name>");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("</project>");
    _builder.newLine();
    return _builder;
  }
}
