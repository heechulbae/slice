import org.etri.slice.commons.SliceException
import org.etri.slice.commons.car.FullBodyException
import org.etri.slice.commons.car.^context.BodyPartLength
import org.etri.slice.commons.car.^context.ObjectInfo
import org.etri.slice.commons.car.^context.SeatPosture
import org.etri.slice.commons.car.^context.UserInfo

domain car {
	exception CarSeatException;
	
	context ObjectInfo {
		String objectId;
		double distance;		
	}
	
	@topic("object_detected")
	event ObjectDetected {
		ObjectInfo info;
	}
	
	@agency(ip="129.254.88.119", port=1883)	
	agent ObjectDetector {
	   hasRuleSet objectdetector_rules {
	      group-id "org.etri.slice"
	      artifact-id "objectdetector"
	   }
	
	   hasBehaviors {
	      behavior "Object Detection Notification"
	         on ObjectInfo
	         do publish ObjectDetected 
	      end 
	   }
	}	
	
	context BodyPartLength {
		double head;
		double torso;
		double arms;
		double legs;
		double height;
	}	
	
    @topic("full_body_detected")
    event FullBodyDetected {
   		BodyPartLength bodyLength;
    }

	control Startable {
		op void start() throws SliceException;
		op void stop();
	}
	
	exception FullBodyException;
	
	control FullBodyDetector extends Startable {
		op void detect(double distance) throws FullBodyException;
	}
	
	@agency(ip="129.254.88.119", port=1883)
	agent FullBodyDetector {
	   hasRuleSet fullbodydetector_rules {
	      group-id "org.etri.slice"
	      artifact-id "fullbodydetector" 
	   }
	
	   hasBehaviors {
	      behavior "Initiate full-body Detection"
	         on ObjectDetected
	         do call FullBodyDetector.detect 
	      end
	
	      behavior "FullBody Detection Notificiation"
	         on BodyPartLength
	         do publish FullBodyDetected
	      end 
	   }
	}

	context Pressure {
		double value;
	}

	context UserInfo {
		String userId;
		BodyPartLength bodyLength;
	}

    @topic("user_seated")
    event UserSeated {
   		UserInfo info;
    }
    
	@agency(ip="129.254.88.119", port=1883)
	agent PressureSensor {
	   hasRuleSet pressuresensor_rules {
	      group-id "org.etri.slice"
	      artifact-id "pressuresensor"
	   }
	
	   hasBehaviors {
	      behavior "UserSeated Notification"
	         on FullBodyDetected, Pressure
	         do publish UserSeated
	      end
	   }
	}
	
    context SeatPosture {
    		double height;
      	double position;
      	double tilt;
    }

    @topic("seat_posture_changed")
    event SeatPostureChanged {
      	SeatPosture posture;
    }
	
	control SeatControl {
		double height;
		double position;
		double tilt;	
		SeatPosture posture;		
	}
	
	@agency(ip="129.254.88.119", port=1883)
	agent CarSeat {
		hasRuleSet carseat_rules {
			group-id "org.etri.slice"
			artifact-id "carseat"
		}
		
	    hasBehaviors {
	      	behavior "Insert BodyPartLength"
	         	on UserSeated
	         	do no-op
	     	 end
	     	 behavior "SeatPosture Change Notification"
	        		 on SeatPosture
	        		 do publish SeatPostureChanged
	     	 end
	    }
		
		hasCommandsOf SeatControl {
			command carseat_height {
				context BodyPartLength.height
				action SeatControl.setHeight
			}
			
			command carseat_position {
				context BodyPartLength.height
				action SeatControl.setPosition
			}
			
			command carseat_tilt {
				context BodyPartLength.height
				action SeatControl.setTilt
			}
		}
	}
												
}