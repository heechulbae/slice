package org.etri.slice.rules.carseat;

import org.etri.slice.commons.car.BodyPartLength;
import org.etri.slice.commons.car.ObjectInfo;
import org.etri.slice.commons.car.event.Pressure;
import org.etri.slice.commons.car.event.SeatPosture;
import org.etri.slice.commons.car.UserInfo;
import org.etri.slice.commons.car.event.FullBodyDetected;
import org.etri.slice.commons.car.event.ObjectDetected;
import org.etri.slice.commons.car.event.SeatPostureChanged;
import org.etri.slice.commons.car.event.UserSeated;
import org.etri.slice.commons.car.service.FullBodyDetector;
import org.etri.slice.commons.car.service.SeatControl;

global FullBodyDetector fullBodyDetector;
global SeatControl seatControl;

/*
rule "Object Detection Notification"
	when 
	   ObjectInfo($dist: distance < 3.0)
	then 
	   channels["object_detected"].send(new ObjectDetected($dist));
end

rule "Initiate the Full-Body Detection"
	when
	   ObjectDetected(distance < 3.0);
	then
	   fullBodyDetector.detect();
end


rule "FullBody Detection Notification"
	when
		$e: BodyPartLength()
	then
		channels["full_body_detected"].send(new FullBodyDetected($e));
end

rule "UserSeated Notification"
	when
		$e1: FullBodyDetected($body: bodyLength)
		$e2: Pressure(value > 30, this meets[10s] $e1)
	then
		channels["user_seated"].send(new UserSeated(new UserInfo("user", $body)));
end

rule "SeatPosture Control"
	when 
		$e: UserSeated($driver: userInfo)
	then		
		seatControl.adjustTo($driver);
end
*/

rule "Insert BodyPartLength"
	when 
		$e: UserSeated($driver: userInfo)
	then		
		insert($driver.getBodyLength());
end

rule "SeatPosture Change Notification"
	when
		$e: SeatPosture()
	then
		channels["seat_posture_changed"].send(new SeatPostureChanged($e));
end



